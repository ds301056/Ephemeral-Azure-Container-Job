# name of the workflow as it appears in Actions
name: Build ‚Üí Push ‚Üí Run ACA Job

on:
  push:
    branches: [ main ]            # run on pushes to main
  workflow_dispatch:              # allow manual runs from the UI

permissions:
  id-token: write                 # OIDC token minting (mandatory with azure/login@v2)
  contents: read                  # lets checkout read the repo

env:
  RG: ${{ secrets.AZURE_RESOURCE_GROUP }}   # you already have this secret
  ACR_NAME: acrephemeraldemo182553          # your ACR short name (no .azurecr.io)
  IMAGE_NAME: ephemeral-job                 # repo/name part in your registry
  IMAGE_TAG: ${{ github.run_number }}       # incrementing tag (keep your original idea)

jobs:
  build-push-run:
    runs-on: ubuntu-latest

    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v4                     # pulls your repo

      - name: üîê Azure Login (OIDC)
        uses: azure/login@v2                          # exchanges GitHub OIDC ‚Üí Azure token
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}   # <- add this repo secret
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}   # <- add this repo secret
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}  # you already have

      - name: üê≥ Build Docker image
        working-directory: app                        # same as your original
        run: |
          # compose full image ref: <registry>/<repo>:<tag>
          FULL_IMAGE="$ACR_NAME.azurecr.io/$IMAGE_NAME:$IMAGE_TAG"
          echo "Building image: $FULL_IMAGE"
          docker build -t "$FULL_IMAGE" .
          echo "FULL_IMAGE=$FULL_IMAGE" >> $GITHUB_ENV # export for later steps

      - name: üîë ACR login via Azure RBAC (no username/password)
        run: |
          az acr login --name "$ACR_NAME"             # uses current Azure token (OIDC/RBAC)

      - name: üì§ Push to ACR
        run: |
          echo "Pushing image: $FULL_IMAGE"
          docker push "$FULL_IMAGE"

      - name: üîÑ Create/Update ACA Job image
        run: |
          echo "Updating Container Apps Job to use new image..."
          # create if missing (idempotent), then update image
          az containerapp job create \
            --name trending-job \
            --resource-group "$RG" \
            --image "$FULL_IMAGE" \
            --trigger-type Manual \
            --replica-timeout 600 \
            --replica-retry-limit 1 \
            --replica-completion-count 1 \
            --parallelism 1 \
            --cpu "0.5" --memory "1Gi" \
            --registry-server "$ACR_NAME.azurecr.io" \
            --registry-identity system || true

          az containerapp job update \
            --name trending-job \
            --resource-group "$RG" \
            --image "$FULL_IMAGE"

      - name: ‚ñ∂Ô∏è Start ACA Job execution
        run: |
          echo "Starting job execution..."
          az containerapp job start \
            --name trending-job \
            --resource-group "$RG"

      - name: ‚è≥ Wait for job completion
        run: sleep 60                                   # you can replace with a poll later

      - name: üìä Show job status
        run: |
          echo "Recent job executions:"
          az containerapp job execution list \
            --name trending-job \
            --resource-group "$RG" \
            --output table
